line number1: type_specifier : INT

int

line number1: type_specifier : INT

int

line number1: parameter_list : type_specifier ID

int a

enterScopeline number2: variable : ID

a

line number2: factor : variable

a

line number2: unary_expression : factor

a

line number2: term : unary_expression

a

line number2: simple_expression : term

a

line number2: expression : simple expression

a

line number2: logic_expression : rel_expression

a

line number2: expression : logic expression

a

line number2: statement : RETURN expression

return a;

line number2: statement_list : statement

return a;

line number3: compound_statement : LCURL statement_list RCURL

{
return a;
}

print all scopes
 ScopeTable: 1.1
< a ,int >
 ScopeTable: 1
< func ,int >
line number3: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int func ( int a ) {
return a;
}


line number3: unit: function_definition 

int func ( int a ) {
return a;
}


line number3: program:  unit 

int func ( int a ) {
return a;
}


line number5: type_specifier : INT

int

line number6: type_specifier : INT

int

line number6: declaration_list: ID LTHIRD CONST INT RTHIRD 

a [2]

line number6: declaration_list: declaration_list COMMA ID 

a [2],c

line number6: declaration_list: declaration_list COMMA ID 

a [2],c,i

line number6: declaration_list: declaration_list COMMA ID 

a [2],c,i,j

line number6: variable_declaration: type_specifier declaration_list SEMICOLON 

int a [2],c,i,j;

line number6: statement : variable_declaration

int a [2],c,i,j;

line number6: statement_list : statement

int a [2],c,i,j;

line number6: type_specifier : FLOAT

float

line number6: declaration_list: ID 

c

line number6: variable_declaration: type_specifier declaration_list SEMICOLON 

float c;

line number6: statement : variable_declaration

float c;

line number6: statement_list : statement_list statement

int a [2],c,i,j;
float c;

line number7: factor : CONST_FLOAT

2.5

line number7: unary_expression : factor

2.5

line number7: term : unary_expression

2.5

line number7: simple_expression : term

2.5

line number7: expression : simple expression

2.5

line number7: logic_expression : rel_expression

2.5

line number7: expression : logic expression

2.5

line number7: variable : ID LTHIRD expression RTHIRD

a[2.5]

line number7: factor : CONST_INT

1

line number7: unary_expression : factor

1

line number7: term : unary_expression

1

line number7: simple_expression : term

1

line number7: expression : simple expression

1

line number7: logic_expression : rel_expression

1

line number7: expression : variable ASSIGNOP logic expression

a[2.5]=1

line number7: expression_statement : expression SEMICOLON

a[2.5]=1;

line number7: statement : expression_statement

a[2.5]=1;

line number7: statement_list : statement_list statement

int a [2],c,i,j;
float c;
a[2.5]=1;

line number8: variable : ID

i

line number8: factor : CONST_FLOAT

2.3

line number8: unary_expression : factor

2.3

line number8: term : unary_expression

2.3

line number8: simple_expression : term

2.3

line number8: expression : simple expression

2.3

line number8: logic_expression : rel_expression

2.3

line number8: expression : variable ASSIGNOP logic expression

i=2.3

line number8: expression_statement : expression SEMICOLON

i=2.3;

line number8: statement : expression_statement

i=2.3;

line number8: statement_list : statement_list statement

int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;

line number9: variable : ID

j

line number9: factor : CONST_INT

2

line number9: unary_expression : factor

2

line number9: term : unary_expression

2

line number9: factor : CONST_FLOAT

3.7

line number9: unary_expression : factor

3.7

line number9: term : term MULOP unary_expression

2%3.7

line number9: simple_expression : term

2%3.7

line number9: expression : simple expression

2%3.7

line number9: logic_expression : rel_expression

2%3.7

line number9: expression : variable ASSIGNOP logic expression

j=2%3.7

line number9: expression_statement : expression SEMICOLON

j=2%3.7;

line number9: statement : expression_statement

j=2%3.7;

line number9: statement_list : statement_list statement

int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;

line number10: variable : ID

a

line number10: factor : CONST_INT

4

line number10: unary_expression : factor

4

line number10: term : unary_expression

4

line number10: simple_expression : term

4

line number10: expression : simple expression

4

line number10: logic_expression : rel_expression

4

line number10: expression : variable ASSIGNOP logic expression

a=4

line number10: expression_statement : expression SEMICOLON

a=4;

line number10: statement : expression_statement

a=4;

line number10: statement_list : statement_list statement

int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;

line number11: variable : ID

a

line number11: factor : variable

a

line number11: unary_expression : factor

a

line number11: term : unary_expression

a

line number11: simple_expression : term

a

line number11: expression : simple expression

a

line number11: logic_expression : rel_expression

a

line number11: argument_list : logic_expression

a

line number11: argument_list : arguments

a

line number11: factor : ID LPAREN argument_list RPAREN

func ( a )

line number11: unary_expression : factor

func ( a )

line number11: term : unary_expression

func ( a )

line number11: simple_expression : term

func ( a )

line number11: expression : simple expression

func ( a )

line number11: logic_expression : rel_expression

func ( a )

line number11: expression : logic expression

func ( a )

line number11: expression_statement : expression SEMICOLON

func ( a );

line number11: statement : expression_statement

func ( a );

line number11: statement_list : statement_list statement

int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func ( a );

line number12: variable : ID

b

line number12: factor : CONST_INT

8

line number12: unary_expression : factor

8

line number12: term : unary_expression

8

line number12: simple_expression : term

8

line number12: expression : simple expression

8

line number12: logic_expression : rel_expression

8

line number12: expression : variable ASSIGNOP logic expression

b=8

line number12: expression_statement : expression SEMICOLON

b=8;

line number12: statement : expression_statement

b=8;

line number12: statement_list : statement_list statement

int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func ( a );
b=8;

line number13: factor : CONST_INT

0

line number13: unary_expression : factor

0

line number13: term : unary_expression

0

line number13: simple_expression : term

0

line number13: expression : simple expression

0

line number13: logic_expression : rel_expression

0

line number13: expression : logic expression

0

line number13: statement : RETURN expression

return 0;

line number13: statement_list : statement_list statement

int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func ( a );
b=8;
return 0;

line number14: compound_statement : LCURL statement_list RCURL

{
int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func ( a );
b=8;
return 0;
}

print all scopes
 ScopeTable: 1.2
< a ,ID >< c ,ID >< i ,ID >< j ,ID >
 ScopeTable: 1
< main ,int >< func ,int >
line number14: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main ( ) {
int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func ( a );
b=8;
return 0;
}


line number14: unit: function_definition 

int main ( ) {
int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func ( a );
b=8;
return 0;
}


line number14: program: program unit 

int func ( int a ) {
return a;
}

int main ( ) {
int a [2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func ( a );
b=8;
return 0;
}


line number15: start: program
print all scopes
 ScopeTable: 1
< main ,int >< func ,int >
total no. of errors: 6
total no. of lines15
